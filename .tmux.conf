# https://github.com/tmux/tmux/wiki/Getting-Started
# https://github.com/tmux/tmux/wiki/Advanced-Use
# https://gist.github.com/achilleas-k/10286c5e269c98129b66b44fdd77b1e7

# CHEATSHEET COMMANDS
# Ctrl+a                = C-a (prefix)
# Tmux command line     = C-a + :
# Vim navigation mode   = C-a + Esc (vim terminal history, see copy-mode)
# Command line history  = C-a + Esc + :
# Available commands    = C-a + ?
# status keys           = C-a + : + "list-keys"
# Vi status keys        = C-a + : + "list-keys -T status-keys" 
# Fetch plugin and src  = C-a + I
# Save tmux state       = C-a + C-s (see Tmux-continuum tmux-resurrect)
# Reload tmux state     = C-a + C-r (see Tmux-continuum tmux-resurrect)
# Option+l              = M-l (requires making option act as meta key)
# Increase cursor int   = C-a C-a (test by holding prefix on 12 and colour12 )

# CHEATSHEET TERMS
# Prefix is tmux's shortcut command to run tmux specific operations. 
# Prefix for tmux is Ctrl+A (C-a)
# Sessions hold multiple windows
# Windows hold multiple panes. Windows are tabs on status bar
# Panes are separate terminals
# Cmds like M-l mean meta-key + l. Meta key isn't provided on mac. 
#  Remap option key to meta-key.
# tmux modes: primary, copy, view, choose, command
#  primary mode: normal tmux mode
#  copy mode: scroll through terminal history, copy text. i.e. C-a + Esc
#  view mode: result of a keybinding that produces output. e.g. C-a + ?
#  choose: displays list of options, choose one. e.g. C-a + s (choose session)
#  command:
# copy-mode-vi is copy-mode with vim key bindings

# CHEATSHEET CONF COMMANDS
# Command Manual: https://fig.io/manual/tmux/command-prompt
# -g flag is global (across all sessions, windows, etc)
# -r flag allows for repeated movement
# set is short for set-option
# setw is short for set-option-window
# tmux list-keys -T copy-mode
# colour[int] will change colour to match the colour it will actually display

# NOTES
# tmux can access env variables. potential idea for displaying on status bar

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1 

# increase repeat time for repeatable commands
set -g repeat-time 1000 

# set history limit
set -g history-limit 50000 

# set clock colour
setw -g clock-mode-colour colour1

# set clock time format
setw -g clock-mode-style 12

# Change prefix from ctrl-b to ctrl-a
unbind C-b # unbind ctrl-b as prefix
set-option -g prefix C-a # bind ctrl-a as new prefix
bind-key C-a send-prefix # allows 2nd C-a to be sent to program (not used atm)

# set fast relead of source
bind R source-file ~/.tmux.conf \; display "Reloaded."

# set w to show session and window tree list
# remapped over C-a + w which chooses window
# http://man.openbsd.org/OpenBSD-current/man1/tmux.1#choose-tree
bind-key 'w' choose-tree -Zs # auto collapse session list. default is -Zw. 
                             # -Z zooms the pane. 
                             # -s starts with sessions collapsed. 
                             # -w starts with windows collapsed.




# SESSION

# stops tmux exiting when closing current session
set-option -g detach-on-destroy off




# WINDOW

# Remove confirmation to kill window
bind-key & kill-window

# re-number windows when one is closed
set -g renumber-windows on

# reset window index to start at 1 instead of 0
set -g base-index 1

# reset pane index to start at 1 instead of 0
setw -g pane-base-index 1

# window default style
set -g window-style 'fg=default,bg=default' #bg=colour253

# active window's style
set -g window-active-style 'fg=default,bg=default' #'fg=colour234,bg=colour231'

# NEW.WINDOW
# taken from primeagens tmux conf, but dont know what its supposed to be doing
# running it just crashes tmux
#bind -r D neww -c "#{pane_current_path}" \
#    "   [[ -e TODO.md ]] && \
#        vim ${HOME}/ztl/tasks/TODO.md || \
#        nvim ~/.dotfiles/personal/todo.md"
#
## forget the find window
#bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"
#
#bind-key -r i run-shell "tmux neww tmux-cht.sh"
#bind-key -r G run-shell "~/.local/bin/tmux-sessionizer ~/work/nrdp"
#bind-key -r C run-shell "~/.local/bin/tmux-sessionizer ~/work/tvui"
#bind-key -r R run-shell "~/.local/bin/tmux-sessionizer ~/work/milo"
#bind-key -r L run-shell "~/.local/bin/tmux-sessionizer ~/work/hpack"
#bind-key -r H run-shell "~/.local/bin/tmux-sessionizer ~/personal/vim-with-me"
#bind-key -r T run-shell "~/.local/bin/tmux-sessionizer ~/personal/refactoring.nvim"
#bind-key -r N run-shell "~/.local/bin/tmux-sessionizer ~/personal/harpoon"
#bind-key -r S run-shell "~/.local/bin/tmux-sessionizer ~/personal/developer-productivity"

# < moves window down one position on status bar
bind -r "<" swap-window -d -t -1

# > moves window up one position on status bar
bind -r ">" swap-window -d -t +1

# switch to last window = C-a + a
bind a last-window

# Prefix+K split current pane vertically. choose window pane as new right pane
bind K choose-window 'join-pane -h -s "%%"'
# Prefix+J split current pane horizontally. choose window pane for bottom pane 
bind J choose-window 'join-pane -s "%%"'

# create new pane with scratchpad
#TODO: check if scratch already exists, open new scratch (e.g. scratch1.md)
bind-key N split-window -h "vim ~/ztl/scratch.md"




# STATUS BAR
# https://github.com/tmux/tmux/wiki/Getting-Started#customizing-the-status-line

# set style for currently active window's tab in status bar
set -g window-status-current-style fg=white,bg=black

# allows for 60 character length for displaying window name on status bar
set -g status-left-length 60

# set clock colour using strftime (https://linux.die.net/man/3/strftime)
# TODO: change battery bg colour from green to red as battery decreases
# TODO: add time left (space permitting)
set -g status-right \
 "#[fg=black,bg=colour5]#(~/.tmux/scripts/battery.sh) Battery\
 #[fg=colour13,bg=black] %I:%M %p -- %A, %d %b %Y\
 #[fg=black,bg=colour14]#(~/.tmux/scripts/tmux-spotify-info)"

# allows for 60 character length for displaying battery and date/time in status
set -g status-right-length 80


# PANES

# Split terminal using | and open using current pane path
unbind '"'
bind | split-window -h -c "#{pane_current_path}"

# Split terminal using - and open using current pane path
unbind %
bind - split-window -v -c "#{pane_current_path}"

# Remove confirmation to kill pane
bind-key x kill-pane

# pane border set to single line
set -g pane-border-lines single

# sets default pane border style
set -g pane-border-style bg=default,fg=blue

# indicate active pane style using coloured borders
set -g pane-border-indicators colour

# sets style for active pane border
set -g pane-active-border-style bg=default,fg=color208





# COLOURS

# Default Terminal
set -g default-terminal "screen-256color" # alt value: "xterm-256color"





# VIM

# set vim key bindings for status line (e.g. command prompt)
# default is emacs unless environment variables VISUAL or EDITOR set to 'vi'
# see 'man tmux' search 'status-keys'
set -g status-keys vi

# sets copy mode to use vim key bindings. see 'man tmux' search 'mode-keys'
setw -g mode-keys vi

# use esc to enter tmux copy mode
unbind-key [
bind-key Escape copy-mode

# bind v to start selection while in copy mode
bind-key -T copy-mode-vi 'v' send -X begin-selection

# TODO: figure out which one to keep
# In copy-mode bind key to copy selected text
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
# bind-key -T copy-mode-vi 'Y' send -X copy-selection-and-cancel
bind-key -T copy-mode-vi 'Y' send -XR copy-pipe "reattach-to-user-namespace pbcopy"

# use C-a + p to paste from tmux shared buffer
unbind-key p
unbind-key n
bind-key p paste-buffer

# Bind j to select and resize panes downward
unbind-key j
bind-key j select-pane -D # bind j to select below pane
bind-key -r M-j resize-pane -D 5 # bind repeatable meta-j to resize down 5 lines

# Bind k to select and resize panes upward
unbind-key k
bind-key k select-pane -U
bind-key -r M-k resize-pane -U 5

# Bind h to select and resize panes left
unbind-key h
bind-key h select-pane -L
bind-key -r M-h resize-pane -L 5

# Bind l to select and resize panes right
unbind-key l
bind-key l select-pane -R
bind-key -r M-l resize-pane -R 5

# bind prefix + ctrl+n to change to next window
bind-key -r C-n next-window

# bind prefix + ctrl+p to change to previous window
bind-key -r C-p previous-window





# PLUGINS
# fetch plugin and source it = C-a + I

# PLUGIN MANAGER
# https://github.com/tmux-plugins/tpm
set -g @plugin 'tmux-plugins/tpm'

# Plugin for various shortcuts (e.g. "prefix a" to get last window)
#set -g @plugin 'tmux-plugins/tmux-sensible'

# Tmux-resurrect and Tmux-continuum
# Save tmux sessions after closing 
# C-a Ctrl+S to Save / C-a Ctrl+R to Resurrect
# https://github.com/tmux-plugins/tmux-resurrect 
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# Automatically restore tmux windows when tmux starts.
set -g @continuum-restore 'on'
# Save every 15 minutes
set -g @continuum-save-interval '15'
# Don't auto-launch tmx at machine boot.  Give me a chance to gcert first.
set -g @continuum-boot 'off'
# Preserves what was readable in each pane.
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'

# https://github.com/christoomey/vim-tmux-navigator
# creates single binding to navigate between vim and tmux splits

# Initialize TMUX plugin manager (keep this line at very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
